apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'bivrost'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "pm.gnosis.android.app.wallet"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode getInt("APP_VERSION_CODE", 1)
        versionName getKey("APP_VERSION_NAME", "1.0")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        project.ext.set("archivesBaseName", String.format("gnosis-authenticator-%s", defaultConfig.versionCode))

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    defaultConfig {
        buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString("https://mainnet.infura.io")
        buildConfigField javaTypes.STRING, "INFURA_API_KEY", asString(getKey("INFURA_API_KEY"))
        buildConfigField javaTypes.BOOLEAN, "PRIVATE_TEST_NET", javaTypes.FALSE
    }

    signingConfigs {
        debug {
            // We add the debug keystore to repo so that the travis build will always have the same signature
            storeFile file("../debug.keystore")
        }
    }

    buildTypes {
        chainTest {
            signingConfig signingConfigs.debug
            minifyEnabled false
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString(getKey("BLOCKCHAIN_NET_URL"))
            buildConfigField javaTypes.BOOLEAN, "PRIVATE_TEST_NET", getKey("PRIVATE_TEST_NET", javaTypes.FALSE)
        }

        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
    implementation "com.android.support:appcompat-v7:$versions.android_support"
    implementation "com.android.support:cardview-v7:$versions.android_support"
    implementation "com.android.support:design:$versions.android_support"

    implementation "android.arch.persistence.room:runtime:$versions.architecture_components"
    kapt "android.arch.persistence.room:compiler:$versions.architecture_components"
    implementation "android.arch.persistence.room:rxjava2:$versions.architecture_components"

    implementation "com.jakewharton.timber:timber:$versions.timber"
    //https://github.com/square/moshi/issues/315
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.gojuno.koptional:koptional:$versions.koptional"

    implementation "com.google.zxing:core:$versions.zxing"
    implementation "com.github.clans:fab:$versions.floating_action_button"
    implementation "me.zhanghai.android.materialprogressbar:library:$versions.material_progressbar"

    //Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    //Ethereum
    implementation "org.ethereum:geth:$versions.geth"
    implementation 'com.github.gnosis.bivrost-kotlin:bivrost-solidity-types:v0.1.0'

    testImplementation "junit:junit:$versions.junit"

    androidTestImplementation("com.android.support.test.espresso:espresso-core:$versions.espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

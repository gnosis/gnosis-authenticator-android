apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'bivrost'
apply plugin: 'io.fabric'
apply from: '../buildsystem/coverageReport.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    defaultConfig {
        applicationId "pm.gnosis.heimdall"
        versionCode getInt("APP_VERSION_CODE", 1)
        versionName getKey("APP_VERSION_NAME", "1.0")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        project.ext.set("archivesBaseName", String.format("gnosis-authenticator-%s", defaultConfig.versionCode))

        ext.betaDistributionGroupAliases = System.getenv("FABRIC_GROUP_INTERNAL_BETA")
        ext.betaDistributionReleaseNotes = System.getenv("APP_RELEASE_NOTES")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        debug {
            // We add the debug keystore to repo so that the travis build will always have the same signature
            storeFile file("../debug.keystore")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            minifyEnabled false
        }

        release {
            minifyEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

jacoco {
    toolVersion = versions.jacoco
    version = versions.jacoco
}

dependencies {
    // We specify junit before anything else to make sure that this version is prioritized over the
    // one bundled in the android.jar
    testImplementation "junit:junit:$versions.junit"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':app-core')
    implementation project(':accounts:base')
    implementation project(':accounts:kethereum')
    implementation project(':heimdall-common')
    implementation project(':crypto')
    implementation project(':mnemonic')
    implementation project(':ticker')
    implementation project(':security')
    implementation project(':utils')

    // Fabric
    implementation("com.crashlytics.sdk.android:crashlytics:$versions.crashlytics@aar") {
        transitive = true
    }

    // Kethereum RLP
    implementation "com.github.walleth.kethereum:rlp:$versions.kethereum"

    //Android
    implementation "com.android.support:appcompat-v7:$versions.android_support"
    implementation "com.android.support:cardview-v7:$versions.android_support"
    implementation "com.android.support:design:$versions.android_support"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
    implementation "com.gojuno.koptional:koptional:$versions.koptional"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"

    //Android Architecture Components
    implementation "android.arch.lifecycle:extensions:$versions.architecture_components"
    kapt "android.arch.lifecycle:compiler:$versions.architecture_components"
    implementation "android.arch.persistence.room:runtime:$versions.architecture_components"
    kapt "android.arch.persistence.room:compiler:$versions.architecture_components"
    implementation "android.arch.persistence.room:rxjava2:$versions.architecture_components"
    implementation "com.android.support:multidex:$versions.multidex"

    //Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.jakewharton.timber:timber:$versions.timber"
    implementation("com.jakewharton.rxbinding2:rxbinding-kotlin:$versions.rxbinding") {
        exclude group: "io.reactivex.rxjava2", module: "rxandroid"
    }
    implementation("com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$versions.rxbinding") {
        exclude group: "io.reactivex.rxjava2", module: "rxandroid"
    }
    implementation("com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:$versions.rxbinding") {
        exclude group: "io.reactivex.rxjava2", module: "rxandroid"
    }
    implementation "com.github.clans:fab:$versions.floating_action_button"
    implementation("me.zhanghai.android.materialprogressbar:library:$versions.material_progressbar") {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation "com.madgag.spongycastle:prov:$versions.spongycastle"
    implementation "com.github.gnosis.bivrost-kotlin:bivrost-solidity-types:$versions.bivrost"

    testImplementation project(':utils-testing')
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$versions.espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}